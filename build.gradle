description "Solr running as Undertow.io servlet"

buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            url 'http://dl.bintray.com/kotlin/kotlin-eap'
        }
        maven {
            url 'http://dl.bintray.com/jaysonminard/kohesive'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${version_kotlin}"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'com.jfrog.bintray'

mainClassName = "uy.kohesive.solr.undertow.App"
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

// set other parameters in SOLR_UNDERTOW_OPTS environment variable, for example:
// export SOLR_UNDERTOW_OPTS="-Xms15G -Xmx15G -XX:MaxPermSize=512m -XX:PermSize=256m -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9901 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

tasks.withType(Tar){
    compression = Compression.GZIP
}

task distWithSolr(type: Tar, dependsOn: distTar) {
    into("${baseName}-${version}-with-solr-${version_solr}")
    from(project.file("src/dist"))
    into("lib") {
        from(jar)
        from(project.configurations.runtime)
    }
    into("bin") {
        from(startScripts)
        fileMode = 0755
    }
    from("example") {
        into("example")
        exclude("**/.ignore")
        exclude("solr-temp/4*")
        exclude("solr-logs/solr.log")
        exclude("solr-wars/*.war")
        exclude("solr-wars/*.zip")
    }
    from("example/solr-wars/solr-${version_solr}.war") {
        into("example/solr-wars")
    }
    from("example/solr-wars/solr-${version_solr}.zip") {
        into("example/solr-wars")
    }
    classifier = "with-solr-${version_solr}"
}

// TODO: make this copyspec work as shared between dist TAR and ZIP, and figure out the application plugin change with new distribution plugin base
task distZipWithSolr(type: Zip, dependsOn: distZip) {
    into("${baseName}-${version}-with-solr-${version_solr}")
    from(project.file("src/dist"))
    into("lib") {
        from(jar)
        from(project.configurations.runtime)
    }
    into("bin") {
        from(startScripts)
        fileMode = 0755
    }
    from("example") {
        into("example")
        exclude("**/.ignore")
        exclude("solr-temp/4*")
        exclude("solr-logs/solr.log")
        exclude("solr-wars/*.war")
        exclude("solr-wars/*.zip")
    }
    from("example/solr-wars/solr-${version_solr}.war") {
        into("example/solr-wars")
    }
    from("example/solr-wars/solr-${version_solr}.zip") {
        into("example/solr-wars")
    }
    classifier = "with-solr-${version_solr}"
}

task(distAll)
distAll.dependsOn clean
distAll.dependsOn test
distAll.dependsOn distWithSolr
distAll.dependsOn distZipWithSolr
distAll.dependsOn installDist

distributions {
    main {
        contents {
            from("example") {
                into("example")
                exclude("**/.ignore")
                exclude("solr-temp/4*")
                exclude("solr-logs/solr.log")
                exclude("solr-wars/*.war")
                exclude("solr-wars/*.zip")
            }
        }
    }
}

repositories {
    jcenter()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap'
    }
    maven {
        url 'http://dl.bintray.com/jaysonminard/kohesive'
    }
}

dependencies {
    compile "io.undertow:undertow-servlet:${version_undertow}"

    compile "uy.klutter:klutter-core-jdk7:${version_klutter}"
    compile "uy.klutter:klutter-config-typesafe-jdk7:${version_klutter}"
    compile "com.typesafe:config:${version_typesafe_config}"

    compile "org.jetbrains.kotlin:kotlin-stdlib:${version_kotlin}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${version_kotlin}"

    compile "org.slf4j:slf4j-api:${version_slf4j}"
    runtime "ch.qos.logback:logback-classic:${version_logback}"
    runtime "ch.qos.logback:logback-access:${version_logback}"
    runtime "org.slf4j:jcl-over-slf4j:${version_slf4j}"
    runtime "org.slf4j:jul-to-slf4j:${version_slf4j}"
    runtime "org.slf4j:log4j-over-slf4j:${version_slf4j}"

    // only for debugging purposes, so we have the correct version of Solr for breakpoints
    // runtime "org.apache.solr:solr-core:${version_solr}"

    testCompile "junit:junit:${version_junit}"
    testCompile "org.jetbrains.kotlin:kotlin-test:${version_kotlin}"

    // test cases might use Solr
    testCompile "org.apache.solr:solr-solrj:${version_solr}"
    testCompile "org.apache.solr:solr-core:${version_solr}"
}

modifyPom {
    project {
        name 'Solr-Undertow'
        description 'Solr / SolrCloud running in high performance server - tiny, fast startup, simple to configure, easy deployment without an application server.'
        url 'https://github.com/kohesive/solr-undertow'
        inceptionYear '2014'

        scm {
            url 'https://github.com/kohesive/solr-undertow'
            connection 'scm:https://github.com/kohesive/solr-undertow.git'
            developerConnection 'scm:git@github.com:kohesive/solr-undertow.git'
        }

        licenses {
            license {
                name 'Apache-2.0'
                url 'https://github.com/kohesive/solr-undertow/blob/master/LICENSE.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'apatrida'
                name 'Jayson Minard'
                email 'jayson.minard@gmail.com'
            }
        }
    }

}

nexus {
    sign = true
}

bintray {
    user = "$bintrayUser"
    key = "$bintrayKey"
    pkg {
        repo = 'kohesive'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'scm:git:git@github.com:kohesive/solr-undertow.git'

        version {
            name = project.version
            desc = 'n/a'
            released = new Date()
        }
        publicDownloadNumbers = false
        configurations = ['archives']
    }
    publish = true
    dryRun = false
}